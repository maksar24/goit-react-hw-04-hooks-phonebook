{"version":3,"sources":["Components/Form/Form.styles.js","Components/Form/Form.js","Components/ContactList/ContactList.styles.js","Components/ContactList/ContactList.js","Components/Filter/Filter.styles.js","Components/Filter/Filter.js","App.styles.js","App.js","index.js"],"names":["BlankPhonebook","styled","form","Label","label","Input","input","Button","button","Form","state","name","number","handelChange","e","currentTarget","value","setState","reset","handleSubmit","preventDefault","newContact","id","shortid","generate","props","onSubmit","this","type","pattern","title","required","onChange","Component","List","ul","Item","li","ContactList","options","searchValue","onDelete","filter","el","toLowerCase","includes","map","onClick","Filter","getSearchName","placeholder","defaultProps","Wrapper","div","App","contacts","addNewContact","forEach","splice","alert","removeContact","prevState","localContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2dbd169.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const BlankPhonebook = styled.form`\n  border: 5px solid #21ce3b;\n  width: 400px;\n  margin: 0 auto;\n  padding: 25px 15px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 25px;\n`;\n\nexport const Input = styled.input`\n  border: 3px solid #48dca9;\n  border-radius: 5px;\n  width: 300px;\n  margin-left: 15px;\n  &:focus {\n    background-color: #47dca9;\n  }\n`;\n\nexport const Button = styled.button`\n  border-color: aliceblue;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #47dca9;\n  width: 95px;\n  &:focus {\n    border-color: #21ce3b;\n  }\n`;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport { BlankPhonebook, Input, Button, Label } from \"./Form.styles\";\n\nexport class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newContact = {\n      id: shortid.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(newContact);\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <BlankPhonebook onSubmit={this.handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handelChange}\n            value={name}\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handelChange}\n            value={number}\n          />\n        </Label>\n        <Button>Add contact</Button>\n      </BlankPhonebook>\n    );\n  }\n}\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  border-color: aliceblue;\n  cursor: pointer;\n  border-radius: 5px;\n  background-color: #47dca9;\n  margin-left: 25px;\n  &:focus {\n    border-color: #21ce3b;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, Item, Button } from \"./ContactList.styles\";\n\nexport const ContactList = ({ options, searchValue, onDelete }) => {\n  return (\n    <List>\n      {options\n        .filter((el) => {\n          return el.name.toLowerCase().includes(searchValue.toLowerCase());\n        })\n        .map(({ name, number, id }) => {\n          return (\n            <Item key={id}>\n              {name}: {number}\n              <Button onClick={() => onDelete(id)}>Delete</Button>\n            </Item>\n          );\n        })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object),\n  searchValue: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Input = styled.input`\n  border: 3px solid #48dca9;\n  border-radius: 5px;\n  width: 300px;\n  margin-left: 15px;\n  &:focus {\n    background-color: #47dca9;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"./Filter.styles\";\n\nexport const Filter = ({ type, label, getSearchName }) => {\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <Input type={type} onChange={getSearchName} placeholder={label} />\n    </>\n  );\n};\n\nFilter.defaultProps = {\n  type: \"text\",\n};\n\nFilter.propTypes = {\n  label: PropTypes.string,\n  getSearchName: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n","import React, { Component } from \"react\";\nimport { Form } from \"./Components/Form/Form\";\nimport { ContactList } from \"./Components/ContactList/ContactList\";\nimport { Filter } from \"./Components/Filter/Filter\";\nimport { Wrapper } from \"./App.styles\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const localContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (localContacts) {\n      this.setState({ contacts: localContacts });\n    }\n    return;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewContact = (newContact) => {\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n\n    this.state.contacts.forEach((el) => {\n      if (el.name === newContact.name) {\n        this.state.contacts.splice(0, 1);\n        alert(`${newContact.name} is already in contacts`);\n      }\n    });\n  };\n\n  getSearchName = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  removeContact = (id) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter((el) => el.id !== id),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <Wrapper>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addNewContact} />\n        <h2>Contacts</h2>\n        <Filter getSearchName={this.getSearchName} label=\"Enter contact name\" />\n        <ContactList\n          options={contacts}\n          searchValue={filter}\n          onDelete={this.removeContact}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}