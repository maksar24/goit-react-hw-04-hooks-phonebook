{"version":3,"sources":["Components/Form/Form.styles.js","Components/Form/Form.js","Components/ContactList/ContactList.styles.js","Components/ContactList/ContactList.js","Components/Filter/Filter.styles.js","Components/Filter/Filter.js","App.styles.js","App.js","index.js"],"names":["BlankPhonebook","styled","form","Label","label","Input","input","Button","button","Form","onSubmit","useState","name","setName","number","setNumber","handelChange","e","target","value","preventDefault","newContact","id","shortid","generate","type","pattern","title","required","onChange","List","ul","Item","li","ContactList","options","searchValue","onDelete","filter","el","toLowerCase","includes","map","onClick","Filter","getSearchName","placeholder","defaultProps","Wrapper","div","App","JSON","parse","window","localStorage","getItem","baseContacts","contacts","setContacts","setFilter","useEffect","setItem","stringify","alert","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ff525f9.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const BlankPhonebook = styled.form`\n  border: 5px solid #21ce3b;\n  width: 400px;\n  margin: 0 auto;\n  padding: 25px 15px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 25px;\n`;\n\nexport const Input = styled.input`\n  border: 3px solid #48dca9;\n  border-radius: 5px;\n  width: 300px;\n  margin-left: 15px;\n  &:focus {\n    background-color: #47dca9;\n  }\n`;\n\nexport const Button = styled.button`\n  border-color: aliceblue;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #47dca9;\n  width: 95px;\n  &:focus {\n    border-color: #21ce3b;\n  }\n`;\n","import React, { useState } from \"react\";\nimport shortid from \"shortid\";\nimport { BlankPhonebook, Input, Button, Label } from \"./Form.styles\";\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handelChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newContact = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n\n    onSubmit(newContact);\n    reset();\n  };\n\n  return (\n    <BlankPhonebook onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handelChange}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handelChange}\n          value={number}\n        />\n      </Label>\n      <Button>Add contact</Button>\n    </BlankPhonebook>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  border-color: aliceblue;\n  cursor: pointer;\n  border-radius: 5px;\n  background-color: #47dca9;\n  margin-left: 25px;\n  &:focus {\n    border-color: #21ce3b;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, Item, Button } from \"./ContactList.styles\";\n\nexport const ContactList = ({ options, searchValue, onDelete }) => {\n  return (\n    <List>\n      {options\n        .filter((el) => {\n          return el.name.toLowerCase().includes(searchValue.toLowerCase());\n        })\n        .map(({ name, number, id }) => {\n          return (\n            <Item key={id}>\n              {name}: {number}\n              <Button onClick={() => onDelete(id)}>Delete</Button>\n            </Item>\n          );\n        })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object),\n  searchValue: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Input = styled.input`\n  border: 3px solid #48dca9;\n  border-radius: 5px;\n  width: 300px;\n  margin-left: 15px;\n  &:focus {\n    background-color: #47dca9;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"./Filter.styles\";\n\nexport const Filter = ({ type, label, getSearchName }) => {\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <Input type={type} onChange={getSearchName} placeholder={label} />\n    </>\n  );\n};\n\nFilter.defaultProps = {\n  type: \"text\",\n};\n\nFilter.propTypes = {\n  label: PropTypes.string,\n  getSearchName: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport Form from \"./Components/Form/Form\";\nimport { ContactList } from \"./Components/ContactList/ContactList\";\nimport { Filter } from \"./Components/Filter/Filter\";\nimport { Wrapper } from \"./App.styles\";\nimport baseContacts from \"./Components/baseContacts.json\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [...baseContacts]\n  );\n  const [filter, setFilter] = useState(\"\");\n\n  const addNewContact = (newContact) => {\n    const similarName = contacts.map((el) => el.name);\n\n    if (similarName.includes(newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n    } else {\n      setContacts((prevContacts) => [newContact, ...prevContacts]);\n    }\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const getSearchName = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const removeContact = (id) => {\n    setContacts(contacts.filter((el) => el.id !== id));\n  };\n\n  return (\n    <Wrapper>\n      <h1>Phonebook</h1>\n      <Form onSubmit={addNewContact} />\n      <h2>Contacts</h2>\n      <Filter getSearchName={getSearchName} label=\"Enter contact name\" />\n      <ContactList\n        options={contacts}\n        searchValue={filter}\n        onDelete={removeContact}\n      />\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}